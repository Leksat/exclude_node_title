<?php
// $Id$
/**
 * @file
 * Exclude Node Title
 *
 * @author Gabriel Ungureanu
 * gabriel.ungreanu@ag-prime.com
 */

/**
 * Implementation of hook_menu().
 */
function exclude_node_title_menu() {

  $items['admin/settings/exclude_node_title'] = array(
    'title' => 'Exclude Node Title from display',
    'description' => 'Exclude Node Title from display',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('exclude_node_title_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}
/**
 * Admin configuration form
 */
function exclude_node_title_admin_settings() {
  $form['exclude_node_title_nid_list'] = array(
    '#type' => 'textarea',
    '#title' => t('Exclude node title from display'),
    '#description' => t('Select nodes to exclude title from display. One $nid per line.'),
    '#default_value' => implode("\n", variable_get('exclude_node_title_nid_list', array())),
  );

  $form['exclude_node_title_remove_title'] = array(
    '#type' => 'checkbox',
    '#title' => t('Remove node title from teasers too'),
    '#description' => t('Select if you wish to remove title from node teasers.'),
    '#default_value' => variable_get('exclude_node_title_remove_title', 0),
  );

  $form['#submit'][] = 'exclude_node_title_admin_submit';
  return system_settings_form($form);
}
/**
 * Submit function for hook_admin_settings form
 * It processes list of nodes in exception list and saves them as array instead of plain text. 
 * Comes before saving actual values in the databse.
 */
function exclude_node_title_admin_submit($form, &$form_state) {
  $exception_ids = $form_state['values']['exclude_node_title_nid_list'];
  $exception_ids = explode("\n", $exception_ids);
  $exception_ids = array_map('trim', $exception_ids);
  $form_state['values']['exclude_node_title_nid_list'] = $exception_ids;
}

/**
 * Implementation of hook_preprocess_page().
 */
function exclude_node_title_preprocess_page(&$vars, $hook) {
  if (arg(0) == 'node' && is_numeric(arg(1))) {
    if (in_array(arg(1), variable_get('exclude_node_title_nid_list', array()))) {
      $vars['title'] = '';
    }
  }
}

/**
 * Implementation of hook_nodeapi().
 */
function exclude_node_title_nodeapi(&$node, $op) {
  if (variable_get('exclude_node_title_remove_title', 0) == 1) {
    switch ($op) {
      case 'view':
        if (in_array($node->nid, variable_get('exclude_node_title_nid_list', array()))) {
          $node->title = '';
        }
    }
  }
}

/**
 * Implementation of hook_form_alter().
 */
function exclude_node_title_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['type']) && isset($form['#node']) && $form['type']['#value'] .'_node_form' == $form_id) {
    $weight = $form['title']['#weight']+1;
    $form['exclude_node_title'] = array(
      '#type' => 'checkbox',
      '#title' => 'Exclude title from display',
      '#required' => FALSE,
      '#default_value' => in_array($form['nid']['#value'], variable_get('exclude_node_title_nid_list', array())),
      '#weight' => $weight,
    );
    $form['#submit'][] = 'exclude_node_title_node_edit_form_submit';
  }
}

/**
 * Implementation of hook_form_submit().
 */
function exclude_node_title_node_edit_form_submit($form, &$form_state) {
  if (isset($form_state['values']['exclude_node_title']) && isset($form_state['values']['nid'])) {
    $exclude_list = variable_get('exclude_node_title_nid_list', array());
    $is_excluded = array_search($form_state['values']['nid'], $exclude_list);
    if ($form_state['values']['exclude_node_title'] == 1 && $is_excluded === FALSE) {
      $exclude_list[] = $form_state['values']['nid'];
      variable_set('exclude_node_title_nid_list', $exclude_list);
      return;
    }
    elseif ($form_state['values']['exclude_node_title'] == 0 && $is_excluded) {
      unset($exclude_list[$is_excluded]);
      variable_set('exclude_node_title_nid_list', $exclude_list);
      return;
    }
  }
}
